version: 2

bitcoin-abc_cache_dirs: &bitcoin-abc_cache_dirs
  paths:
    - "src"
setup_docker: &setup_docker
  version: 17.10.0-ce

jobs:
  build:
    docker:
      - image: debian:stretch-slim
        environment:
          AWS_CLI_VERSION: 1.11.167
          AWS_DEFAULT_REGION: ap-southeast-2
          PYTHON_PIP_VERSION: 9.0.1
          NODE_ENV: development
          BITCOIN_ROOT: ~/bitcoin-abc
          BDB_PREFIX: /usr/local/db4
    working_directory: ~/bitcoin-abc
    steps:
      - run: apt-get update
      - run: apt-get install -y curl wget git python-pip build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils clang cmake libogg-dev libvorbis-dev libflac-dev libfaad-dev libncursesw5-dev libasound2-dev libpulse-dev pulseaudio libmicrohttpd-dev libmp3lame-dev libcurl4-openssl-dev
      - run: apt-get install -y libboost-all-dev
      - run: apt-get install docker-ce
      # 
      # - run: curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo "$ID")/gpg | sudo apt-key add -
      # - run: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable"
      # - run:
      #     name: Install Docker client
      #     command: |
      #       set -x
      #       VER="17.10.0-ce"
      #       curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
      #       tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #       mv /tmp/docker/* /usr/bin
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/bitcoin-abc
      - restore_cache:
          keys:
            - bitcoin-abc-{{ .Branch }}-cache-{{ arch }}
      # Install AWS CLI
      - run: pip install awscli==${AWS_CLI_VERSION}

      # Build Berkeley DB
      - run: mkdir -p $BDB_PREFIX
      - run: cd $BDB_PREFIX/..
      # Fetch the source and verify that it is not tampered with
      - run: wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'
      - run: echo '12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz' | sha256sum -c
      # -> db-4.8.30.NC.tar.gz: OK
      - run: tar -xzvf db-4.8.30.NC.tar.gz
      # Build the library and install to our prefix
      #  Note: Do a static build so that it can be embedded into the executable, instead of having to find a .so at runtime
      - run: cd db-4.8.30.NC/build_unix/ && ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX
      - run: cd db-4.8.30.NC/build_unix/ && make install
      # Configure Bitcoin ABC to use our own-built instance of BDB
      - run: ./autogen.sh
      - run: ./configure --with-gui=no LDFLAGS="-L${BDB_PREFIX}/lib/" CPPFLAGS="-I${BDB_PREFIX}/include/" # (other args...)
      # Build
      - run: make
      - run: make install

      - save_cache:
         key: bitcoin-abc-{{ .Branch }}-cache-{{ arch }}
         <<: *bitcoin-abc_cache_dirs
      - persist_to_workspace:
         root: ~/bitcoin-abc
         <<: *bitcoin-abc_cache_dirs

      - run: aws s3 cp src/bitcoind s3://explorer.cointree.com/coins/bch/bin/bitcoind
      - run: aws s3 cp src/bitcoin-cli s3://explorer.cointree.com/coins/bch/bin/bitcoin-cli
      - run: aws s3 cp src/bitcoin-seeder s3://explorer.cointree.com/coins/bch/bin/bitcoin-seeder
      - run: aws s3 cp src/bitcoin-tx s3://explorer.cointree.com/coins/bch/bin/bitcoin-tx
      - run: aws s3 cp src/.libs/ s3://explorer.cointree.com/coins/bch/lib/ --recursive

      # Build and push BCH docker image to AWS
      - run: docker build -f Dockerfile -t ${AWS_ACCOUNT_ID}.dkr.ecr.ap-southeast-2.amazonaws.com/bitcoin-abc:${CIRCLE_SHA1} .
      - run: docker push ${AWS_ACCOUNT_ID}.dkr.ecr.ap-southeast-2.amazonaws.com/bitcoin-abc:${CIRCLE_SHA1}

workflows:
  version: 2
  api:
    jobs:
      - build
